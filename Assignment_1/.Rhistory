airpoldata <- read.csv(file_list[i])
# Create complete cases
good <- complete.cases(airpoldata)
airpoldata.complete <- airpoldata[good, ]
# Create "dat" to contain temperary data which stores both sulfate and nitrate with ID == i
dat <- subset(airpoldata.complete, ID == i)
dat <- subset(dat, select = c("sulfate", "nitrate"))
# Generate a dataset "data.nobs" containning both id and nobs
temp <- data.frame(id = i, nobs = nrow(subset(airpoldata.complete, ID == i)))
data.nobs <- rbind(data.nobs, temp)
}
print (data.nobs)
## Set working directory create a files_list of all files in "specdata" directory
file_list <- list.files("specdata", full.names = TRUE)
## Creat empty datasets "airpoldata[i]", "good", and "corr"
airpoldata <- data.frame()
data.nobs <-  data.frame()
# Read and rbind the files within the files_list with the underlying "ID" to fill "airpoldata"
for (i in 1:332) {
## Read and create individual datasets for each csv files
airpoldata <- read.csv(file_list[i])
# Create complete cases
good <- complete.cases(airpoldata)
airpoldata.complete <- airpoldata[good, ]
# Create "dat" to contain temperary data which stores both sulfate and nitrate with ID == i
dat <- subset(airpoldata.complete, ID == i)
dat <- subset(dat, select = c("sulfate", "nitrate"))
# Calculate the correlation between sulfate and nitrate
temp <- data.frame(id = i,
nobs = nrow(subset(airpoldata.complete, ID == i)),
corr = cor(dat$sulfate, dat$nitrate))
# Generate a dataset "data.nobs" containning "id", "nobs", and "corr"
# And including only the rows which have nobs greater than threshold
if (temp$nobs > 150) {
data.nobs <- rbind(data.nobs, temp)
}
}
# Extract "corr" to form a single column dataset
corr.data <- subset(data.nobs, select = c("corr"))
print( as.numeric(corr.data$corr))
dir()
data.nobs <- complete("specdata", id = 1:332)
source("complete.R")
data.nobs <- complete("specdata", id = 1:332)
source("complete.R")
data.nobs <- complete("specdata", id = 1:332)
source("complete.R")
data.corr <- data.frame()
data.corr <- complete("specdata", id = 1:332)
source("complete.R")
data.corr <- data.frame(complete("specdata", id = 1:332))
View(data.corr)
source("complete.R")
source("corr.R")
source("corr.R")
cr <- corr("specdata", 150)
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
head(cr)
summary(cr)
cr <- corr("specdata", 400)
head(cr)
summary(cr)
cr <- corr("specdata", 5000)
summary(cr)
cr <- corr("specdata", 5000)
cr <- corr("specdata", 5000)
cr <- corr("specdata", 5000)
source("corr.R")
source("complete.R")
cr <- corr("specdata", 5000)
source("corr.R")
source("complete.R")
cr <- corr("specdata", 5000)
source("corr.R")
source("complete.R")
cr <- corr("specdata", 5000)
source("corr.R")
source("complete.R")
cr <- corr("specdata", 5000)
summary(cr)
length(cr)
cr <- corr("specdata")
summary(cr)
?vector()
source("corr.R")
source("complete.R")
cr <- corr("specdata")
summary(cr)
source("corr.R")
source("complete.R")
cr <- corr("specdata")
summary(cr)
cr <- corr("specdata", 150)
head(cr)
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
head(cr)
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
head(cr)
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
head(cr)
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
head(cr)
## Set working directory create a files_list of all files in "specdata" directory
file_list <- list.files("specdata", full.names = TRUE)
## Creat empty datasets "airpoldata[i]", "good", and "corr"
airpoldata <- data.frame()
data.nobs <-  data.frame()
# Read and rbind the files within the files_list with the underlying "ID" to fill "airpoldata"
for (i in 1:332) {
## Read and create individual datasets for each csv files
airpoldata <- read.csv(file_list[i])
# Create complete cases
good <- complete.cases(airpoldata)
airpoldata.complete <- airpoldata[good, ]
# Create "dat" to contain temperary data which stores both sulfate and nitrate with ID == i
dat <- subset(airpoldata.complete, ID == i)
dat <- subset(dat, select = c("sulfate", "nitrate"))
# Calculate the correlation between sulfate and nitrate
temp <- data.frame(id = i,
nobs = nrow(subset(airpoldata.complete, ID == i)),
corr = cor(dat$sulfate, dat$nitrate))
}
View(airpoldata.complete)
## Set working directory create a files_list of all files in "specdata" directory
file_list <- list.files("specdata", full.names = TRUE)
## Creat empty datasets "airpoldata[i]", "good", and "corr"
airpoldata <- data.frame()
data.nobs <-  data.frame()
# Read and rbind the files within the files_list with the underlying "ID" to fill "airpoldata"
for (i in 1:332) {
## Read and create individual datasets for each csv files
airpoldata <- read.csv(file_list[i])
# Create complete cases
good <- complete.cases(airpoldata)
airpoldata.complete <- airpoldata[good, ]
# Create "dat" to contain temperary data which stores both sulfate and nitrate with ID == i
dat <- subset(airpoldata.complete, ID == i)
dat <- subset(dat, select = c("sulfate", "nitrate"))
# Calculate the correlation between sulfate and nitrate
temp <- data.frame(id = i,
nobs = nrow(subset(airpoldata.complete, ID == i)),
corr = cor(dat$sulfate, dat$nitrate))
# Generate a dataset "data.nobs" containning "id", "nobs", and "corr"
# And including only the rows which have nobs greater than threshold
if (temp$nobs > threshold) {
data.nobs <- rbind(data.nobs, temp)
# Extract "corr" to form a single column dataset
data.corr <- subset(data.nobs, select = c("corr"))
}
}
## Set working directory create a files_list of all files in "specdata" directory
file_list <- list.files("specdata", full.names = TRUE)
## Creat empty datasets "airpoldata[i]", "good", and "corr"
airpoldata <- data.frame()
data.nobs <-  data.frame()
# Read and rbind the files within the files_list with the underlying "ID" to fill "airpoldata"
for (i in 1:332) {
## Read and create individual datasets for each csv files
airpoldata <- read.csv(file_list[i])
# Create complete cases
good <- complete.cases(airpoldata)
airpoldata.complete <- airpoldata[good, ]
# Create "dat" to contain temperary data which stores both sulfate and nitrate with ID == i
dat <- subset(airpoldata.complete, ID == i)
dat <- subset(dat, select = c("sulfate", "nitrate"))
# Calculate the correlation between sulfate and nitrate
temp <- data.frame(id = i,
nobs = nrow(subset(airpoldata.complete, ID == i)),
corr = cor(dat$sulfate, dat$nitrate))
# Generate a dataset "data.nobs" containning "id", "nobs", and "corr"
# And including only the rows which have nobs greater than threshold
if (temp$nobs > 0) {
data.nobs <- rbind(data.nobs, temp)
# Extract "corr" to form a single column dataset
data.corr <- subset(data.nobs, select = c("corr"))
}
}
## Set working directory create a files_list of all files in "specdata" directory
file_list <- list.files("specdata", full.names = TRUE)
## Creat empty datasets "airpoldata[i]", "good", and "corr"
airpoldata <- data.frame()
data.nobs <-  data.frame()
# Read and rbind the files within the files_list with the underlying "ID" to fill "airpoldata"
for (i in 1:332) {
## Read and create individual datasets for each csv files
airpoldata <- read.csv(file_list[i])
# Create complete cases
good <- complete.cases(airpoldata)
airpoldata.complete <- airpoldata[good, ]
# Create "dat" to contain temperary data which stores both sulfate and nitrate with ID == i
dat <- subset(airpoldata.complete, ID == i)
dat <- subset(dat, select = c("sulfate", "nitrate"))
# Calculate the correlation between sulfate and nitrate
temp <- data.frame(id = i,
nobs = nrow(subset(airpoldata.complete, ID == i)),
corr = cor(dat$sulfate, dat$nitrate))
# Generate a dataset "data.nobs" containning "id", "nobs", and "corr"
# And including only the rows which have nobs greater than threshold
if (temp$nobs > 0) {
data.nobs <- rbind(data.nobs, temp)
# Extract "corr" to form a single column dataset
data.corr <- subset(data.nobs, select = c("corr"))
}
}
## Set working directory create a files_list of all files in "specdata" directory
file_list <- list.files("specdata", full.names = TRUE)
## Creat empty datasets "airpoldata[i]", "good", and "corr"
airpoldata <- data.frame()
data.nobs <-  data.frame()
# Read and rbind the files within the files_list with the underlying "ID" to fill "airpoldata"
for (i in 1:332) {
## Read and create individual datasets for each csv files
airpoldata <- read.csv(file_list[i])
# Create complete cases
good <- complete.cases(airpoldata)
airpoldata.complete <- airpoldata[good, ]
# Create "dat" to contain temperary data which stores both sulfate and nitrate with ID == i
dat <- subset(airpoldata.complete, ID == i)
dat <- subset(dat, select = c("sulfate", "nitrate"))
# Calculate the correlation between sulfate and nitrate
temp <- data.frame(id = i,
nobs = nrow(subset(airpoldata.complete, ID == i)),
corr = cor(dat$sulfate, dat$nitrate))
# Generate a dataset "data.nobs" containning "id", "nobs", and "corr"
# And including only the rows which have nobs greater than threshold
if (temp$nobs > 0) {
data.nobs <- rbind(data.nobs, temp)
# Extract "corr" to form a single column dataset
data.corr <- subset(data.nobs, select = c("corr"))
}
}
print(data.corr)
## Set working directory create a files_list of all files in "specdata" directory
file_list <- list.files("specdata", full.names = TRUE)
## Creat empty datasets "airpoldata[i]", "good", and "corr"
airpoldata <- data.frame()
data.nobs <-  data.frame()
# Read and rbind the files within the files_list with the underlying "ID" to fill "airpoldata"
for (i in 1:332) {
## Read and create individual datasets for each csv files
airpoldata <- read.csv(file_list[i])
# Create complete cases
good <- complete.cases(airpoldata)
airpoldata.complete <- airpoldata[good, ]
# Create "dat" to contain temperary data which stores both sulfate and nitrate with ID == i
dat <- subset(airpoldata.complete, ID == i)
dat <- subset(dat, select = c("sulfate", "nitrate"))
# Calculate the correlation between sulfate and nitrate
temp <- data.frame(id = i,
nobs = nrow(subset(airpoldata.complete, ID == i)),
corr = cor(dat$sulfate, dat$nitrate))
# Generate a dataset "data.nobs" containning "id", "nobs", and "corr"
# And including only the rows which have nobs greater than threshold
if (temp$nobs > 0) {
data.nobs <- rbind(data.nobs, temp)
# Extract "corr" to form a single column dataset
data.corr <- subset(data.nobs, select = c("corr"))
}
}
print(as.numeric(data.corr))
class(data.corr)
## Set working directory create a files_list of all files in "specdata" directory
file_list <- list.files("specdata", full.names = TRUE)
## Creat empty datasets "airpoldata[i]", "good", and "corr"
airpoldata <- data.frame()
data.nobs <-  data.frame()
# Read and rbind the files within the files_list with the underlying "ID" to fill "airpoldata"
for (i in 1:332) {
## Read and create individual datasets for each csv files
airpoldata <- read.csv(file_list[i])
# Create complete cases
good <- complete.cases(airpoldata)
airpoldata.complete <- airpoldata[good, ]
# Create "dat" to contain temperary data which stores both sulfate and nitrate with ID == i
dat <- subset(airpoldata.complete, ID == i)
dat <- subset(dat, select = c("sulfate", "nitrate"))
# Calculate the correlation between sulfate and nitrate
temp <- data.frame(id = i,
nobs = nrow(subset(airpoldata.complete, ID == i)),
corr = cor(dat$sulfate, dat$nitrate))
# Generate a dataset "data.nobs" containning "id", "nobs", and "corr"
# And including only the rows which have nobs greater than threshold
if (temp$nobs > 0) {
data.nobs <- rbind(data.nobs, temp)
# Extract "corr" to form a single column dataset
data.corr <- subset(data.nobs, select = c("corr"))
}
}
print(data.matrix(data.corr))
corr <- function(directory, threshold = 0) {
## Set working directory create a files_list of all files in "specdata" directory
file_list <- list.files("specdata", full.names = TRUE)
## Creat empty datasets "airpoldata[i]", "good", and "corr"
airpoldata <- data.frame()
data.nobs <-  data.frame()
# Read and rbind the files within the files_list with the underlying "ID" to fill "airpoldata"
for (i in 1:332) {
## Read and create individual datasets for each csv files
airpoldata <- read.csv(file_list[i])
# Create complete cases
good <- complete.cases(airpoldata)
airpoldata.complete <- airpoldata[good, ]
# Create "dat" to contain temperary data which stores both sulfate and nitrate with ID == i
dat <- subset(airpoldata.complete, ID == i)
dat <- subset(dat, select = c("sulfate", "nitrate"))
# Calculate the correlation between sulfate and nitrate
temp <- data.frame(id = i,
nobs = nrow(subset(airpoldata.complete, ID == i)),
corr = cor(dat$sulfate, dat$nitrate))
# Generate a dataset "data.nobs" containning "id", "nobs", and "corr"
# And including only the rows which have nobs greater than threshold
if (temp$nobs > 0) {
data.nobs <- rbind(data.nobs, temp)
# Extract "corr" to form a single column dataset
data.corr <- subset(data.nobs, select = c("corr"))
}
}
print(as.numeric(data.matrix(data.corr)))
}
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
## Set working directory create a files_list of all files in "specdata" directory
file_list <- list.files("specdata", full.names = TRUE)
## Creat empty datasets "airpoldata[i]", "good", and "corr"
airpoldata <- data.frame()
data.nobs <-  data.frame()
# Read and rbind the files within the files_list with the underlying "ID" to fill "airpoldata"
for (i in 1:332) {
## Read and create individual datasets for each csv files
airpoldata <- read.csv(file_list[i])
# Create complete cases
good <- complete.cases(airpoldata)
airpoldata.complete <- airpoldata[good, ]
# Create "dat" to contain temperary data which stores both sulfate and nitrate with ID == i
dat <- subset(airpoldata.complete, ID == i)
dat <- subset(dat, select = c("sulfate", "nitrate"))
# Calculate the correlation between sulfate and nitrate
temp <- data.frame(id = i,
nobs = nrow(subset(airpoldata.complete, ID == i)),
corr = cor(dat$sulfate, dat$nitrate))
# Generate a dataset "data.nobs" containning "id", "nobs", and "corr"
# And including only the rows which have nobs greater than threshold
if (temp$nobs > 0) {
data.nobs <- rbind(data.nobs, temp)
# Extract "corr" to form a single column dataset
data.corr <- subset(data.nobs, select = c("corr"))
}
}
print(as.numeric(data.matrix(data.corr)))
source("corr.R")
source("complete.R")
cr <- corr("specdata")
summary(cr)
source("corr.R")
source("complete.R")
cr <- corr("specdata")
summary(cr)
length(cr)
cr <- corr("specdata", 5000)
summary(cr)
source("corr.R")
source("complete.R")
cr <- corr("specdata", 5000)
summary(cr)
source("corr.R")
source("complete.R")
cr <- corr("specdata", 5000)
summary(cr)
source("corr.R")
source("complete.R")
cr <- corr("specdata", 5000)
summary(cr)
data.nobs <- vector("numeric", length = 0)
if (nrow(data.nobs) > 0) {
data.corr <- as.numeric(data.matrix(subset(data.nobs, select = c("corr"))))
} else {
data.corr <- vector("numeric", length = 0)
}
nrow(data.nobs)
if (nrow(data.nobs) == NULL) {
data.corr <- vector("numeric", length = 0)
} else {
data.corr <- as.numeric(data.matrix(subset(data.nobs, select = c("corr"))))
}
length(data.nobs)
if (length(data.nobs) == 0) {
data.corr <- vector("numeric", length = 0)
} else {
data.corr <- as.numeric(data.matrix(subset(data.nobs, select = c("corr"))))
}
source("corr.R")
source("complete.R")
cr <- corr("specdata", 5000)
summary(cr)
length(cr)
cr <- corr("specdata", 150)
head(cr)
summary(cr)
cr <- corr("specdata", 400)
head(cr)
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
submit()
cube <- function(x, n) {
x^3
}
cube(3)
x <- 1:10
if(x > 5) {
x <- 0
}
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
h <- function(x, y = NULL, d = 3L) {
z <- cbind(x, d)
if(!is.null(y))
z <- z + y
else
z <- z + f
g <- x + y / z
if(d == 3L)
return(g)
g <- g + 10
g
}
z <- cbind(x, d)
if(!is.null(y))
z <- z + y
else
z <- z + f
g <- x + y / z
if(d == 3L)
return(g)
g <- g + 10
g
d = 3L
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
cube <- function(x, n) {
x^3
}
cube(3)
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
