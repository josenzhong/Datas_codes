file.remove("stateList.RData")
file.remove("outcome.ss.RData")
file.remove("outcome.order.RData")
file.remove("outcome.order_2.RData")
file.remove("pick_2.RData")
##------------------------------------
outcome.order_2 <- as.data.frame(NA)
outcome.order_2 <- rbind(outcome.order_2, pick_2)
rm("pick_2")
}
##-------
colnames(outcome.order_2) <- c("hospital", "state")
length <- nrow(outcome.order_2)
save(length, file = "length.RData")
save(outcome.order_2, file = "outcome.order_2.RData")
}
source("read.outcomeData.R")
read.outcomeData()
load("outcome.short.RData")
file.remove("outcome.short.RData")
stateCal <- function(outcome, num) {
## StateList
stateList <- unique(as.character(outcome.short$State))
stateList <- as.data.frame(stateList)
state.order <- stateList[order(stateList$stateList), ]
colnames(stateList) <- c("state")
save(stateList, file = "stateList.RData")
## NrowState
nrowState <- nrow(stateList)
n <- NA
for(n <= nrowState) {
n <- n+1
state <- as.character(stateList[n, ])
source("condition.outcome.R")
condition.outcome(outcome, state, num)
##-----------------------------------
load("stateList.RData")
load("outcome.ss.RData")
load("outcome.order.RData")
load("outcome.order_2.RData")
load("pick_2.RData")
##
file.remove("stateList.RData")
file.remove("outcome.ss.RData")
file.remove("outcome.order.RData")
file.remove("outcome.order_2.RData")
file.remove("pick_2.RData")
##------------------------------------
outcome.order_2 <- as.data.frame(NA)
outcome.order_2 <- rbind(outcome.order_2, pick_2)
rm("pick_2")
}
##-------
colnames(outcome.order_2) <- c("hospital", "state")
length <- nrow(outcome.order_2)
save(length, file = "length.RData")
save(outcome.order_2, file = "outcome.order_2.RData")
}
stateCal <- function(outcome, num) {
## StateList
stateList <- unique(as.character(outcome.short$State))
stateList <- as.data.frame(stateList)
state.order <- stateList[order(stateList$stateList), ]
colnames(stateList) <- c("state")
save(stateList, file = "stateList.RData")
## NrowState
nrowState <- nrow(stateList)
n <- 0
for(n <= nrowState) {
n <- n+1
state <- as.character(stateList[n, ])
source("condition.outcome.R")
condition.outcome(outcome, state, num)
##-----------------------------------
load("stateList.RData")
load("outcome.ss.RData")
load("outcome.order.RData")
load("outcome.order_2.RData")
load("pick_2.RData")
##
file.remove("stateList.RData")
file.remove("outcome.ss.RData")
file.remove("outcome.order.RData")
file.remove("outcome.order_2.RData")
file.remove("pick_2.RData")
##------------------------------------
outcome.order_2 <- as.data.frame(NA)
outcome.order_2 <- rbind(outcome.order_2, pick_2)
rm("pick_2")
}
##-------
colnames(outcome.order_2) <- c("hospital", "state")
length <- nrow(outcome.order_2)
save(length, file = "length.RData")
save(outcome.order_2, file = "outcome.order_2.RData")
}
condition.outcome <- function(outcome, state, num) {
if(outcome == "heart attack") {
x <- "heart.attack"
## heart.attack
outcome.ss <- subset(outcome.short,
State == state & heart.attack != "Not Available")
outcome.ss$x <- as.numeric(levels(outcome.ss$heart.attack)[outcome.ss$heart.attack],
options(digits = 5))
save(outcome.ss, file = "outcome.ss.RData")
##
outcome.order <- outcome.ss[order(outcome.ss$heart.attack,
outcome.ss$Hospital), ]
save(outcome.order, file = "outcome.order.RData")
##
if(num <= nrow(outcome.order)){
pick <- outcome.order[num, ]
attach(pick)
pick <- cbink(as.character(Hospital), as.character(State))
detach(pick)
} else {
pick <- c("<NA>", state)
}
} else if(outcome == "heart failure") {
x <- "heart.failure"
## heart.failure
outcome.ss <- subset(outcome.short,
State == state & heart.failure != "Not Available")
outcome.ss$heart.failure <- as.numeric(levels(outcome.ss$heart.failure)[outcome.ss$heart.failure],
options(digits = 5))
save(outcome.ss, file = "outcome.ss.RData")
##
outcome.order <- outcome.ss[order(outcome.ss$heart.failure,
outcome.ss$Hospital), ]
save(outcome.order, file = "outcome.order.RData")
##
if(num <= nrow(outcome.order)){
pick <- outcome.order[num, ]
attach(pick)
pick <- cbink(as.character(Hospital), as.character(State))
detach(pick)
} else {
pick <- c("<NA>", state)
}
} else if(outcome == "pneumonia") {
x <- "pneumonia"
## pneumonia
outcome.ss <- subset(outcome.short,
State == state & pneumonia != "Not Available")
outcome.ss$pneumonia <- as.numeric(levels(outcome.ss$pneumonia)[outcome.ss$pneumonia],
options(digits = 5))
save(outcome.ss, file = "outcome.ss.RData")
##
outcome.order <- outcome.ss[order(outcome.ss$pneumonia,
outcome.ss$Hospital), ]
save(outcome.order, file = "outcome.order.RData")
##
if(num == "best") { num <- 1 }
if(num == "worst") { num <- nrow(outcome.order) }
##
if(num <= nrow(outcome.order)){
pick <- outcome.order[num, ]
attach(pick)
pick <- cbink(as.character(Hospital), as.character(State))
detach(pick)
} else {
pick <- c("<NA>", state)
}
}
##
save(pick_2, file = "pick_2.RData")
}
condition.outcome("heart attack", "TX", 20)
## Read outcome data
source("read.outcomeData.R")
read.outcomeData()
load("outcome.short.RData")
file.remove("outcome.short.RData")
condition.outcome("heart attack", "TX", 20)
## Read outcome data
source("read.outcomeData.R")
read.outcomeData()
load("outcome.short.RData")
file.remove("outcome.short.RData")
source("condition.outcome.R")
condition.outcome("heart attack", "TX", 20)
## Read outcome data
source("read.outcomeData.R")
read.outcomeData()
load("outcome.short.RData")
file.remove("outcome.short.RData")
source("condition.outcome.R")
condition.outcome("heart attack", "TX", 20)
source("condition.outcome.R")
## Read outcome data
source("read.outcomeData.R")
read.outcomeData()
load("outcome.short.RData")
file.remove("outcome.short.RData")
condition.outcome("heart attack", "TX", 20)
outcome.ss <- subset(outcome.short,
State == "TX" & heart.attack != "Not Available")
outcome.ss$x <- as.numeric(levels(outcome.ss$heart.attack)[outcome.ss$heart.attack],
options(digits = 5))
save(outcome.ss, file = "outcome.ss.RData")
##
outcome.order <- outcome.ss[order(outcome.ss$heart.attack,
outcome.ss$Hospital), ]
save(outcome.order, file = "outcome.order.RData")
pick <- outcome.order[20, ]
View(pick)
attach(pick)
pick_2 <- cbind(as.character(Hospital), as.character(State))
detach(pick)
View(pick_2)
save(pick_2, file = "pick.RData")
pick_2 <- c("<NA>", state)
pick_2 <- c("<NA>", "TX")
pick_2 <- cbind(as.character(Hospital), as.character(State))
pick_2 <- as.data.frame(c("<NA>", "TX"))
View(pick_2)
pick_2 <- as.data.frame(rbind("<NA>", "TX"))
View(pick_2)
pick_2 <- as.data.frame(cbind("<NA>", "TX"))
View(pick_2)
pick_2 <- cbind(as.character(Hospital), as.character(State))
pick_2 <- as.data.frame(cbind(as.character(Hospital), as.character(State)))
source("condition.outcome.R")
condition.outcome("heart attack", "TX", 20)
## StateList
stateList <- unique(as.character(outcome.short$State))
stateList <- as.data.frame(stateList)
state.order <- stateList[order(stateList$stateList), ]
colnames(stateList) <- c("state")
save(stateList, file = "stateList.RData")
## Read outcome data
source("read.outcomeData.R")
read.outcomeData()
load("outcome.short.RData")
file.remove("outcome.short.RData")
## Check that the outcome is valid
outcomeVer <- c("heart attack", "heart failure", "pneumonia")
source("condition.outcome.R")
condition.outcome("heart attack", "TX", 20)
source("rankall.R")
source("rankall.R")
source("rankall.R")
source("rankall.R")
source("rankall.R")
head(rankall("heart attack", 20), 10)
## Read outcome data
source("read.outcomeData.R")
read.outcomeData()
load("outcome.short.RData")
file.remove("outcome.short.RData")
## Check that the outcome is valid
outcomeVer <- c("heart attack", "heart failure", "pneumonia")
##
outcome.order_2 <- as.data.frame(NA)
## StateList
stateList <- unique(as.character(outcome.short$State))
stateList <- as.data.frame(stateList)
state.order <- stateList[order(stateList$stateList), ]
colnames(stateList) <- c("state")
save(stateList, file = "stateList.RData")
nrowState <- nrow(stateList)
num <- 20
if(num <= nrowState) { ## 3
n <- 1
state <- as.character(stateList[n, ])
for(state in nrowState) {
state <- as.character(stateList[n, ])
n <- n+1
source("condition.outcome.R")
condition.outcome(outcome, state, num)
load("pick_2.RData")
file.remove("pick_2.RData")
outcome.order_2 <- rbind(outcome.order_2, pick)
rm("pick_2")
}
print(outcome.order_2)
} else {
print(NA)
} ## 3
if(num <= nrowState) { ## 3
n <- 1
state <- as.character(stateList[n, ])
for(state in nrowState) {
state <- as.character(stateList[n, ])
n <- n+1
source("condition.outcome.R")
condition.outcome("heart attack", state, num)
load("pick_2.RData")
file.remove("pick_2.RData")
outcome.order_2 <- rbind(outcome.order_2, pick)
rm("pick_2")
}
print(outcome.order_2)
} else {
print(NA)
} ## 3
## Read outcome data
source("read.outcomeData.R")
read.outcomeData()
load("outcome.short.RData")
file.remove("outcome.short.RData")
## Check that the outcome is valid
outcomeVer <- c("heart attack", "heart failure", "pneumonia")
##
outcome.order_2 <- as.data.frame(NA)
##
## StateList
stateList <- unique(as.character(outcome.short$State))
stateList <- as.data.frame(stateList)
state.order <- stateList[order(stateList$stateList), ]
colnames(stateList) <- c("state")
save(stateList, file = "stateList.RData")
# NrowState
nrowState <- nrow(stateList)
n <- 20
if(num <= nrowState) { ## 3
n <- 1
state <- as.character(stateList[n, ])
for(state in nrowState) {
state <- as.character(stateList[n, ])
n <- n+1
source("condition.outcome.R")
condition.outcome("heart attack", state, num)
load("pick_2.RData")
file.remove("pick_2.RData")
outcome.order_2 <- rbind(outcome.order_2, pick)
rm("pick_2")
}
print(outcome.order_2)
} else {
print(NA)
} ## 3
num <- 20
num <- 20
if(num <= nrowState) { ## 3
n <- 1
state <- as.character(stateList[n, ])
for(state in nrowState) {
state <- as.character(stateList[n, ])
n <- n+1
source("condition.outcome.R")
condition.outcome("heart attack", state, num)
load("pick_2.RData")
file.remove("pick_2.RData")
outcome.order_2 <- rbind(outcome.order_2, pick)
rm("pick_2")
}
print(outcome.order_2)
} else {
print(NA)
} ## 3
if(num <= nrowState) { ## 3
n <- 1
state <- as.character(stateList[n, ])
for(state in nrowState) {
state <- as.character(stateList[n, ])
n <- n+1
source("condition.outcome.R")
condition.outcome("heart attack", state, num)
load("pick_2.RData")
file.remove("pick_2.RData")
outcome.order_2 <- rbind(outcome.order_2, pick_2)
rm("pick_2")
}
print(outcome.order_2)
} else {
print(NA)
} ## 3
View(pick_2)
outcome.order_2 <- as.data.frame(cbind(NA, NA))
if(num <= nrowState) { ## 3
n <- 1
state <- as.character(stateList[n, ])
for(state in nrowState) {
state <- as.character(stateList[n, ])
n <- n+1
source("condition.outcome.R")
condition.outcome("heart attack", state, num)
load("pick_2.RData")
file.remove("pick_2.RData")
outcome.order_2 <- rbind(outcome.order_2, pick_2)
rm("pick_2")
}
print(outcome.order_2)
} else {
print(NA)
} ## 3
for(state in nrowState) {
state <- as.character(stateList[n, ])
n <- n + 1
source("condition.outcome.R")
condition.outcome("heart attack", state, num)
load("pick_2.RData")
file.remove("pick_2.RData")
outcome.order_2 <- rbind(outcome.order_2, pick_2)
rm("pick_2")
}
print(outcome.order_2)
if(num <= nrowState) { ## 3
n <- 1
state <- as.character(stateList[n, ])
for(state %in% nrowState) {
state <- as.character(stateList[n, ])
n <- n + 1
source("condition.outcome.R")
condition.outcome("heart attack", state, num)
load("pick_2.RData")
file.remove("pick_2.RData")
outcome.order_2 <- rbind(outcome.order_2, pick_2)
rm("pick_2")
}
print(outcome.order_2)
} else {
print(NA)
} ## 3
state <- as.character(stateList[n, ])
n <- n + 1
state <- as.character(stateList[n, ])
n <- n + 1
state <- as.character(stateList[n, ])
n <- n + 1
state <- as.character(stateList[n, ])
n <- n + 1
state <- as.character(stateList[n, ])
rankall <- function(outcome, num="best") {
outcome.names <- c("heart attack", "heart failure", "pneumonia")
# check validity of outcome
if (!outcome %in% outcome.names) {
stop("invalid outcome")
}
data <- read.csv("outcome-of-care-measures.csv", colClasses="character")
# rename outcome columns for easy reference
names(data)[c(11,17,23)] <- outcome.names
# take just the columns we need, convert outcome column to numeric
data <- data[,c("State","Hospital.Name",outcome)]
data[,outcome] <- suppressWarnings(as.numeric(data[,outcome]))
# get rid of rows where outcome is na
data <- data[!is.na(data[outcome]),]
# sort data by state name, then outcome, then hospital name
data <- data[order(data$State, data[outcome], data$Hospital.Name),]
# aggregate by state, choosing the row that corresponds to the rank num
ranksbystate <- aggregate(data, by=list(data$State), function(x) {
if (!is.numeric(num)) {
if (num == "best") {
num <- 1
} else if (num == "worst") {
num <- length(x)
} else {
stop("invalid num")
}
}
x[num]
})
# get just the columns we need and rename them
out <- ranksbystate[,c(3,1)]
names(out) <- c("hospital","state")
return(out)
}
head(rankall("heart attack", 20), 10)
head(rankall("heart attack", 20), 10)
tail(rankall("pneumonia", "worst"), 3)
tail(rankall("heart failure"), 10)
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript3.R")
submit()
submit()
submit()
?suppressWarnings()
data <- read.csv("outcome-of-care-measures.csv", colClasses="character")
View(data)
outcome.names <- c("heart attack", "heart failure", "pneumonia")
names(data)[c(11,17,23)] <- outcome.names
data <- data[,c("State","Hospital.Name",outcome)]
data <- data[,c("State","Hospital.Name", "heart attack")]
View(data)
x <- as.numeric(data[,"heart attack"])
x
data[,outcome] <- suppressWarnings(as.numeric(data[,"heart attack"]))
data[,"heart attack"] <- suppressWarnings(as.numeric(data[,"heart attack"]))
View(data)
outcome.names <- c("heart attack", "heart failure", "pneumonia")
data <- read.csv("outcome-of-care-measures.csv", colClasses="character")
names(data)[c(11,17,23)] <- outcome.names
data <- data[,c("State","Hospital.Name",outcome)]
View(data)
data <- data[,c("State","Hospital.Name","heart attack")]
View(data)
data[,"heart attack"] <- suppressWarnings(as.numeric(data[,"heart attack"]))
View(data)
data <- data[!is.na(data["heart attack"]),]
View(data)
data <- data[order(data$State, data["heart attack"], data$Hospital.Name),]
View(data)
?aggregate()
num <- 20
ranksbystate <- aggregate(data, by=list(data$State), function(x) {
if (!is.numeric(num)) {
if (num == "best") {
num <- 1
} else if (num == "worst") {
num <- length(x)
} else {
stop("invalid num")
}
}
x[num]
})
View(ranksbystate)
out <- ranksbystate[,c(3,1)]
names(out) <- c("hospital","state")
return(out)
return(out)
print(out)
